<% if current_user && current_user.id == @area.map.user_id || current_user.is_admin? %>

  <div class="row" id="mapHolder">
    <div class="col-xs-10 col-xs-offset-1">
        <%- model_class = Area -%>
        <div class="page-header">
          <h1><%=t '.title', :default => [:'helpers.titles.edit', 'Edit %{model}'], :model => model_class.model_name.human.titleize %></h1>
        </div>

        <%= render 'editmap' %>
    </div>
  </div>
  
  <script>
	// Initialise the FeatureGroup to store editable layers
	var drawnItems = L.geoJson(<%= 's' + @area.id.to_s + @area.name.gsub(/\W\s?/, "") %>);
	map.addLayer(drawnItems);
	
	drawnItems.setStyle({<%= render :partial => 'area_status' %>});

	// Initialise and alter the draw control and pass it the FeatureGroup of editable layers
	var drawControl = new L.Control.Draw({
		draw: {
			//These options make up the root object that is used when initialising the Leaflet.draw control.
			position: 'topleft',
			polygon: false,
			polyline: false,
			rectangle: false,
			circle: false,
			marker: false
		},
		edit: {
			featureGroup: drawnItems
		}
	});
	map.addControl(drawControl);

	

	//draw:created - Triggered when a new vector or marker has been created.
	map.on('draw:edited', function (e) {
		var layers = e.layers;
		
    	layers.eachLayer(function (layer) {
	        //do whatever you want, most likely save back to db
	      		//var type = e.layerType,
				//layer = e.layer;
			
			var shape = layer.toGeoJSON();
	  		var shape_for_db = JSON.stringify(shape);
	
			document.getElementById('area_coords').value = shape_for_db;
	    });
	});
</script>


  <div class="row" id="mapHolder">
    <div class="col-xs-10 col-xs-offset-1">
        <br><br>
        <%= render :partial => 'form' %>
    </div>
  </div>
<% else %>
 <h2>You are not authorized to be here. <a href="/" class="btn btn-default">Return Home</a></h2>
<% end %>